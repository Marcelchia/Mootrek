Post mortems are important to understand about what happened in a project and actively think about what you learned.

Post-mortems are meant to be a blame-less space open to objective conversation about what went well and what could be improved.

Even in the examples below, where tens of millions of dollars could be lost, the best approach is to think through the series of events that led to the outcome.

Large mistakes are almost never the fault of the developer, but of the sytems and processes in place to prevent errors and problems.

https://github.com/danluu/post-mortems https://blog.codinghorror.com/the-project-postmortem/

What to Bring
Please answer the following questions. Take at least 30 minutes to prepare.

Approach and Process
What in my process and approach to this project would I do differently next time?

A: Input alert buttons, build up the css interface. give a range for the date

What in my process and approach to this project went well that I would repeat next time?

A: The various restful routes, truly understand how it works.
--

Code and Code Design
What in my code and program design in the project would I do differently next time?

A: Will try to do MVC as i didnt managed to complete that format, incorporating dom manipulation

What in my code and program design in the project went well? Is there anything I would do the same next time?

A: Restful routes

For each, please include code examples.

Code snippet up to 20 lines.
Code design documents or architecture drawings / diagrams.
WDI Unit 2 Post Mortem
What habits did I use during this unit that helped me?

refactor the code well, still relatively easy to read

What habits did I have during this unit that I can improve on?

conduct MVC


How is the overall level of the course during this unit? (instruction, course materials, etc.)

Will need to practice on your own. Good resources of previous students code.